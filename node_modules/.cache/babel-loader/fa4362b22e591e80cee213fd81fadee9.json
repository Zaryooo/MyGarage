{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\MyGarage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\MyGarage\\\\src\\\\store\\\\auth-context.js\";\n\nimport React, { useState, useEffect } from 'react';\nvar AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: function onLogout() {},\n  onLogin: function onLogin(email, password) {}\n});\nexport var AuthContextProvider = function AuthContextProvider(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoggedIn = _useState2[0],\n      setIsLoggedIn = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLogin = _useState4[0],\n      setIsLogin = _useState4[1];\n\n  useEffect(function () {\n    var storedUserLogInfo = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLogInfo === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  var logoutHandler = function logoutHandler() {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n    setIsLogin(false);\n  };\n\n  var loginHandler = function loginHandler() {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  var btnLoginHadler = function btnLoginHadler() {\n    setIsLogin(true);\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      isLogin: isLogin,\n      onLogout: logoutHandler,\n      onLogin: loginHandler,\n      loginBtn: btnLoginHadler\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport default AuthContext;","map":{"version":3,"sources":["C:/Users/zaryo/OneDrive/Desktop/MyGarage/src/store/auth-context.js"],"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","isLogin","setIsLogin","storedUserLogInfo","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","btnLoginHadler","loginBtn","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,IAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtCC,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CAFoB;AAGtCC,EAAAA,OAAO,EAAE,iBAACC,KAAD,EAAQC,QAAR,EAAqB,CAAE;AAHM,CAApB,CAApB;AAMA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AAAA,kBACRV,QAAQ,CAAC,KAAD,CADA;AAAA;AAAA,MACrCI,UADqC;AAAA,MACzBO,aADyB;;AAAA,mBAEdX,QAAQ,CAAC,KAAD,CAFM;AAAA;AAAA,MAErCY,OAFqC;AAAA,MAE5BC,UAF4B;;AAI5CZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA1B;;AAEA,QAAIF,iBAAiB,KAAK,GAA1B,EAA+B;AAC7BH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GANQ,EAMN,EANM,CAAT;;AAQA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BF,IAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AACAP,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD;;AAMA,MAAMM,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,MAAMU,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,UAAU,EAAEA,UADP;AAELQ,MAAAA,OAAO,EAAEA,OAFJ;AAGLP,MAAAA,QAAQ,EAAEY,aAHL;AAILX,MAAAA,OAAO,EAAEa,YAJJ;AAKLG,MAAAA,QAAQ,EAAED;AALL,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGX,KAAK,CAACa,QATT,CADF;AAaD,CAxCM;AA0CP,eAAerB,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n  isLoggedIn: false,\r\n  onLogout: () => {},\r\n  onLogin: (email, password) => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedUserLogInfo = localStorage.getItem('isLoggedIn');\r\n\r\n    if (storedUserLogInfo === '1') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem('isLoggedIn');\r\n    setIsLoggedIn(false);\r\n    setIsLogin(false);\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    localStorage.setItem('isLoggedIn', '1');\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const btnLoginHadler = () => {\r\n    setIsLogin(true);\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n        isLogin: isLogin,\r\n        onLogout: logoutHandler,\r\n        onLogin: loginHandler,\r\n        loginBtn: btnLoginHadler\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}