{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\MyGarage App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\MyGarage App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\MyGarage App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\MyGarage App\\\\src\\\\components\\\\Garage\\\\Garage.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Cars from '../Cars/Cars';\nimport Card from '../UI/Card/Card';\nimport Img from '../UI/Img/Img';\nimport classes from './Garage.module.css';\nimport garageImage from '../../assets/Awesome-garage.jfif';\nimport CarsContext from '../../store/cars-context';\nimport Wrapper from '../UI/Wrapper/Wrapper';\n\nvar Garage = function Garage(props) {\n  var carsCtx = useContext(CarsContext);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      httpError = _useState6[0],\n      setHttpError = _useState6[1];\n\n  useEffect(function () {\n    var fetchCars = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, responseData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setIsLoading(true);\n                _context.next = 3;\n                return fetch('https://react-http2-d8099-default-rtdb.firebaseio.com/users/user1', {\n                  method: 'PUT',\n                  header: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    cars: car\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n\n                if (response.ok) {\n                  _context.next = 6;\n                  break;\n                }\n\n                throw new Error('Something went wrong!');\n\n              case 6:\n                _context.next = 8;\n                return response.json();\n\n              case 8:\n                responseData = _context.sent;\n                setUserData(responseData);\n                setIsLoading(false);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchCars() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchCars().catch(function (error) {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n    console.log(\"fetch\");\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, httpError));\n  }\n\n  var user = Object.assign({}, userData);\n  console.log(user);\n  var loadedUser = [];\n\n  for (var key in user) {\n    loadedUser.push({\n      id: key,\n      email: user[key].email\n    });\n  }\n\n  var loadedCars = [];\n\n  for (var _i = 0, _Object$values = Object.values(user); _i < _Object$values.length; _i++) {\n    var value = _Object$values[_i];\n    var cars = value.cars;\n\n    for (var _car in cars) {\n      loadedCars.push({\n        id: _car,\n        brand: cars[_car].brand,\n        series: cars[_car].series,\n        services: cars[_car].services\n      });\n    }\n  }\n\n  carsCtx.cars = loadedCars;\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Img, {\n    src: garageImage,\n    alt: \"Awesome garage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: classes.garage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Cars, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Garage;","map":{"version":3,"sources":["C:/Users/zaryo/OneDrive/Desktop/MyGarage App/src/components/Garage/Garage.js"],"names":["React","useState","useEffect","useContext","Cars","Card","Img","classes","garageImage","CarsContext","Wrapper","Garage","props","carsCtx","userData","setUserData","isLoading","setIsLoading","httpError","setHttpError","fetchCars","fetch","method","header","body","JSON","stringify","cars","car","response","ok","Error","json","responseData","catch","error","message","console","log","user","Object","assign","loadedUser","key","push","id","email","loadedCars","values","value","brand","series","services","garage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\n\nimport Cars from '../Cars/Cars';\nimport Card from '../UI/Card/Card';\n\nimport Img from '../UI/Img/Img';\nimport classes from './Garage.module.css';\nimport garageImage from '../../assets/Awesome-garage.jfif';\nimport CarsContext from '../../store/cars-context';\nimport Wrapper from '../UI/Wrapper/Wrapper';\n\nconst Garage = (props) => {\n  const carsCtx = useContext(CarsContext);\n\n  const [userData, setUserData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(false);\n\n  useEffect(() => {\n    const fetchCars = async () => {\n      setIsLoading(true);\n      const response = await fetch(\n        'https://react-http2-d8099-default-rtdb.firebaseio.com/users/user1', {\n          method: 'PUT',\n          header: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            cars: car\n          })\n        }\n\n      );\n\n      if (!response.ok) { \n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      setUserData(responseData);\n      setIsLoading(false);\n    };\n\n    fetchCars().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n    console.log(\"fetch\");\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Card>\n        <p>Loading...</p>\n      </Card>\n    );\n  }\n\n  if (httpError) {\n    return (\n      <Card>\n        <p>{httpError}</p>\n      </Card>\n    );\n  }\n\n  const user = Object.assign({}, userData);\n  console.log(user);\n  const loadedUser = [];\n\n  for (const key in user) {\n    loadedUser.push({\n      id: key,\n      email: user[key].email\n    });\n  }\n  \n  const loadedCars = [];\n\n  for (const value of Object.values(user)) {\n    const cars = value.cars;\n    for (const car in cars) {\n      loadedCars.push({\n        id: car,\n        brand: cars[car].brand,\n        series: cars[car].series,\n        services: cars[car].services,\n      });\n    }\n  }\n\n  carsCtx.cars = loadedCars;\n\n  return (\n    <Wrapper>\n      <Img src={garageImage} alt=\"Awesome garage\" />\n      <Card className={classes.garage}>\n        <Cars/>\n      </Card>\n    </Wrapper>\n  );\n};\n\nexport default Garage;\n"]},"metadata":{},"sourceType":"module"}