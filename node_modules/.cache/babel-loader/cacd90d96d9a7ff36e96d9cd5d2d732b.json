{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\GonkiBG\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\GonkiBG\\\\src\\\\components\\\\Cars\\\\Service\\\\NewService.js\";\n\nimport React, { useState, useRef, useEffect, useReducer } from 'react';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport UserData from '../../../UserData/UserData';\nimport classes from './NewService.module.css';\n\nvar inputReducer = function inputReducer(state, action) {\n  if (action.type === 'FILL_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val !== ''\n    };\n  }\n\n  if (action.type === 'BLUR_INPUT') {\n    return {\n      value: state.val,\n      isValid: state.val !== ''\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nvar NewService = function NewService(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      serviceName = _useState2[0],\n      setServiceName = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nameIsValid = _useState4[0],\n      setNameIsValid = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      serviceDate = _useState6[0],\n      setServiceDate = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dateIsValid = _useState8[0],\n      setDateIsValid = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      serviceMileage = _useState10[0],\n      setServiceMileage = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mileageIsValid = _useState12[0],\n      setMileageIsValid = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      formIsValid = _useState14[0],\n      setFormIsValid = _useState14[1];\n\n  var infoService = useRef(null);\n\n  var _useReducer = useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      nameState = _useReducer2[0],\n      dispatchName = _useReducer2[1];\n\n  useEffect(function () {\n    setFormIsValid(serviceName && serviceDate && serviceMileage);\n  }, [serviceName, serviceDate, serviceMileage]);\n\n  var serviceChangeHandler = function serviceChangeHandler(event) {\n    dispatchName({\n      type: 'FILL_INPUT',\n      val: event.target.value\n    });\n  };\n\n  var validateServiceHandler = function validateServiceHandler() {\n    dispatchName({\n      type: 'FILL_INPUT'\n    });\n  };\n\n  var dateChangeHandler = function dateChangeHandler(event) {\n    setServiceDate(event.target.value);\n  };\n\n  var validateDateHandler = function validateDateHandler() {\n    setDateIsValid(serviceDate !== '');\n  };\n\n  var mileageChangeHandler = function mileageChangeHandler(event) {\n    setServiceMileage(event.target.value);\n  };\n\n  var validateMileageHandler = function validateMileageHandler() {\n    setMileageIsValid(serviceMileage !== '');\n  };\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    var info = infoService.current.value;\n\n    var _serviceDate$split = serviceDate.split('-'),\n        _serviceDate$split2 = _slicedToArray(_serviceDate$split, 3),\n        year = _serviceDate$split2[0],\n        month = _serviceDate$split2[1],\n        day = _serviceDate$split2[2];\n\n    var date = \"\".concat(day, \"-\").concat(month, \"-\").concat(year);\n    var newService = {\n      service: serviceName,\n      date: date,\n      mileage: serviceMileage,\n      info: info\n    };\n    props.carNewService(newService);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes['new-service'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes['service-form'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"service\",\n    label: \"Service\",\n    type: \"text\",\n    isValid: nameIsValid,\n    value: serviceName,\n    onChange: serviceChangeHandler,\n    onBlur: validateServiceHandler,\n    className: \"\".concat(classes.control, \" \").concat(classes['service-name']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes['service-date-box'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"date\",\n    label: \"Date\",\n    type: \"date\",\n    isValid: dateIsValid,\n    value: serviceDate,\n    onChange: dateChangeHandler,\n    onBlur: validateDateHandler,\n    className: \"\".concat(classes.control, \" \").concat(classes['service-date']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"mileage\",\n    label: \"Mileage\",\n    type: \"number\",\n    isValid: mileageIsValid,\n    value: serviceMileage,\n    onChange: mileageChangeHandler,\n    onBlur: validateMileageHandler,\n    className: \"\".concat(classes.control, \" \").concat(classes['service-mileage']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Info\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"info\",\n    label: \"Info\",\n    type: \"text\",\n    ref: infoService,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: submitHandler,\n    className: classes.btn,\n    disabled: !formIsValid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Add Service\"))));\n};\n\nexport default NewService;","map":{"version":3,"sources":["C:/Users/zaryo/OneDrive/Desktop/GonkiBG/src/components/Cars/Service/NewService.js"],"names":["React","useState","useRef","useEffect","useReducer","Input","Button","UserData","classes","inputReducer","state","action","type","value","val","isValid","NewService","props","serviceName","setServiceName","nameIsValid","setNameIsValid","serviceDate","setServiceDate","dateIsValid","setDateIsValid","serviceMileage","setServiceMileage","mileageIsValid","setMileageIsValid","formIsValid","setFormIsValid","infoService","nameState","dispatchName","serviceChangeHandler","event","target","validateServiceHandler","dateChangeHandler","validateDateHandler","mileageChangeHandler","validateMileageHandler","submitHandler","preventDefault","info","current","split","year","month","day","date","newService","service","mileage","carNewService","control","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useReducer } from 'react';\r\n\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\nimport UserData from '../../../UserData/UserData';\r\n\r\nimport classes from './NewService.module.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  if (action.type === 'FILL_INPUT') {\r\n    return { value: action.val, isValid: action.val !== '' };\r\n  }\r\n  if (action.type === 'BLUR_INPUT') {\r\n    return { value: state.val, isValid: state.val !== '' };\r\n  }\r\n  return { value: '', isValid: false };\r\n};\r\n\r\nconst NewService = (props) => {\r\n  const [serviceName, setServiceName] = useState('');\r\n  const [nameIsValid, setNameIsValid] = useState();\r\n  const [serviceDate, setServiceDate] = useState('');\r\n  const [dateIsValid, setDateIsValid] = useState();\r\n  const [serviceMileage, setServiceMileage] = useState('');\r\n  const [mileageIsValid, setMileageIsValid] = useState();\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const infoService = useRef(null);\r\n\r\n  const [nameState, dispatchName] = useReducer(inputReducer, {\r\n    value: '',\r\n    isValid: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFormIsValid(serviceName && serviceDate && serviceMileage);\r\n  }, [serviceName, serviceDate, serviceMileage]);\r\n\r\n  const serviceChangeHandler = (event) => {\r\n    dispatchName({ type: 'FILL_INPUT', val: event.target.value });\r\n  };\r\n\r\n  const validateServiceHandler = () => {\r\n    dispatchName({ type: 'FILL_INPUT'})\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setServiceDate(event.target.value);\r\n  };\r\n\r\n  const validateDateHandler = () => {\r\n    setDateIsValid(serviceDate !== '');\r\n  };\r\n\r\n  const mileageChangeHandler = (event) => {\r\n    setServiceMileage(event.target.value);\r\n  };\r\n\r\n  const validateMileageHandler = () => {\r\n    setMileageIsValid(serviceMileage !== '');\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const info = infoService.current.value;\r\n    const [year, month, day] = serviceDate.split('-');\r\n    const date = `${day}-${month}-${year}`;\r\n    const newService = {\r\n      service: serviceName,\r\n      date,\r\n      mileage: serviceMileage,\r\n      info,\r\n    };\r\n    props.carNewService(newService);\r\n  };\r\n\r\n  return (\r\n    <div className={classes['new-service']}>\r\n      <div className={classes['service-form']}>\r\n        <form>\r\n          <Input\r\n            id=\"service\"\r\n            label=\"Service\"\r\n            type=\"text\"\r\n            isValid={nameIsValid}\r\n            value={serviceName}\r\n            onChange={serviceChangeHandler}\r\n            onBlur={validateServiceHandler}\r\n            className={`${classes.control} ${classes['service-name']}`}\r\n          />\r\n          <div className={classes['service-date-box']}>\r\n            <Input\r\n              id=\"date\"\r\n              label=\"Date\"\r\n              type=\"date\"\r\n              isValid={dateIsValid}\r\n              value={serviceDate}\r\n              onChange={dateChangeHandler}\r\n              onBlur={validateDateHandler}\r\n              className={`${classes.control} ${classes['service-date']}`}\r\n            />\r\n            <Input\r\n              id=\"mileage\"\r\n              label=\"Mileage\"\r\n              type=\"number\"\r\n              isValid={mileageIsValid}\r\n              value={serviceMileage}\r\n              onChange={mileageChangeHandler}\r\n              onBlur={validateMileageHandler}\r\n              className={`${classes.control} ${classes['service-mileage']}`}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"info\">Info</label>\r\n            <input id=\"info\" label=\"Info\" type=\"text\" ref={infoService} />\r\n          </div>\r\n        </form>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={submitHandler}\r\n            className={classes.btn}\r\n            disabled={!formIsValid}\r\n          >\r\n            Add Service\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewService;\r\n"]},"metadata":{},"sourceType":"module"}