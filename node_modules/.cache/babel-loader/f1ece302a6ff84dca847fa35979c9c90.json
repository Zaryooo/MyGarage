{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\MyGarage App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\MyGarage App\\\\src\\\\components\\\\Cars\\\\Book\\\\NewService.js\";\n\nimport React, { useState, useRef, useEffect, useReducer } from 'react';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport { db } from '../../firebase';\nimport { uid } from 'uid';\nimport { set, ref } from 'firebase/database';\nimport classes from './NewService.module.css';\n\nvar inputReducer = function inputReducer(state, action) {\n  if (action.type === 'FILL_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val !== ''\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nvar NewService = function NewService(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      formIsValid = _useState2[0],\n      setFormIsValid = _useState2[1];\n\n  var infoService = useRef(null);\n\n  var _useReducer = useReducer(inputReducer, {\n    value: '',\n    isValid: null\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      nameState = _useReducer2[0],\n      dispatchName = _useReducer2[1];\n\n  var _useReducer3 = useReducer(inputReducer, {\n    value: '',\n    isValid: null\n  }),\n      _useReducer4 = _slicedToArray(_useReducer3, 2),\n      dateState = _useReducer4[0],\n      dispatchDate = _useReducer4[1];\n\n  var _useReducer5 = useReducer(inputReducer, {\n    value: '',\n    isValid: null\n  }),\n      _useReducer6 = _slicedToArray(_useReducer5, 2),\n      mileageState = _useReducer6[0],\n      dispatchMileage = _useReducer6[1];\n\n  useEffect(function () {\n    setFormIsValid(nameState.isValid && dateState.isValid && mileageState.isValid);\n  }, [nameState, dateState, mileageState]);\n\n  var serviceChangeHandler = function serviceChangeHandler(event) {\n    dispatchName({\n      type: 'FILL_INPUT',\n      val: event.target.value\n    });\n  };\n\n  var dateChangeHandler = function dateChangeHandler(event) {\n    dispatchDate({\n      type: 'FILL_INPUT',\n      val: event.target.value\n    });\n  };\n\n  var mileageChangeHandler = function mileageChangeHandler(event) {\n    dispatchMileage({\n      type: 'FILL_INPUT',\n      val: event.target.value\n    });\n  };\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    var info = infoService.current.value.trim() === 0 ? '---' : infoService.current.value;\n\n    var _dateState$value$spli = dateState.value.split('-'),\n        _dateState$value$spli2 = _slicedToArray(_dateState$value$spli, 3),\n        year = _dateState$value$spli2[0],\n        month = _dateState$value$spli2[1],\n        day = _dateState$value$spli2[2];\n\n    var date = \"\".concat(day, \"-\").concat(month, \"-\").concat(year);\n    var serviceId = uid();\n    set(ref(db, \"/\".concat(props.userId, \"/cars/\").concat(serviceId)), {\n      serviceId: serviceId,\n      service: nameState.value,\n      mileage: mileageState.value,\n      date: date,\n      info: info\n    });\n    props.carNewService(newService);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes['new-service'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes['service-form'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"service\",\n    label: \"Service\",\n    type: \"text\",\n    isValid: nameState.isValid,\n    value: nameState.value,\n    onChange: serviceChangeHandler,\n    className: \"\".concat(classes.control, \" \").concat(classes['service-name']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes['service-date-box'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"date\",\n    label: \"Date\",\n    type: \"date\",\n    isValid: dateState.isValid,\n    value: dateState.value,\n    onChange: dateChangeHandler,\n    className: \"\".concat(classes.control, \" \").concat(classes['service-date']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"mileage\",\n    label: \"Mileage\",\n    type: \"number\",\n    isValid: mileageState.isValid,\n    value: mileageState.value,\n    onChange: mileageChangeHandler,\n    className: \"\".concat(classes.control, \" \").concat(classes['service-mileage']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.control,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"info\",\n    label: \"Info\",\n    type: \"text\",\n    ref: infoService,\n    className: \"\".concat(classes.control, \" \").concat(classes['service-mileage']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.btn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Add Service\")))));\n};\n\nexport default NewService;","map":{"version":3,"sources":["C:/Users/zaryo/OneDrive/Desktop/MyGarage App/src/components/Cars/Book/NewService.js"],"names":["React","useState","useRef","useEffect","useReducer","Input","Button","db","uid","set","ref","classes","inputReducer","state","action","type","value","val","isValid","NewService","props","formIsValid","setFormIsValid","infoService","nameState","dispatchName","dateState","dispatchDate","mileageState","dispatchMileage","serviceChangeHandler","event","target","dateChangeHandler","mileageChangeHandler","submitHandler","preventDefault","info","current","trim","split","year","month","day","date","serviceId","userId","service","mileage","carNewService","newService","control","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useReducer } from 'react';\r\n\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport { db } from '../../firebase';\r\nimport { uid } from 'uid';\r\nimport { set, ref } from 'firebase/database';\r\n\r\nimport classes from './NewService.module.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  if (action.type === 'FILL_INPUT') {\r\n    return { value: action.val, isValid: action.val !== '' };\r\n  }\r\n  return { value: '', isValid: false };\r\n};\r\n\r\nconst NewService = (props) => {\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const infoService = useRef(null);\r\n\r\n  const [nameState, dispatchName] = useReducer(inputReducer, {\r\n    value: '',\r\n    isValid: null,\r\n  });\r\n  const [dateState, dispatchDate] = useReducer(inputReducer, {\r\n    value: '',\r\n    isValid: null,\r\n  });\r\n  const [mileageState, dispatchMileage] = useReducer(inputReducer, {\r\n    value: '',\r\n    isValid: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFormIsValid(\r\n      nameState.isValid && dateState.isValid && mileageState.isValid\r\n    );\r\n  }, [nameState, dateState, mileageState]);\r\n\r\n  const serviceChangeHandler = (event) => {\r\n    dispatchName({ type: 'FILL_INPUT', val: event.target.value });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    dispatchDate({ type: 'FILL_INPUT', val: event.target.value });\r\n  };\r\n\r\n  const mileageChangeHandler = (event) => {\r\n    dispatchMileage({ type: 'FILL_INPUT', val: event.target.value });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    const info =\r\n      infoService.current.value.trim() === 0 ? '---' : infoService.current.value;\r\n    const [year, month, day] = dateState.value.split('-');\r\n    const date = `${day}-${month}-${year}`;\r\n\r\n    const serviceId = uid();\r\n    set(ref(db, `/${props.userId}/cars/${serviceId}`), {\r\n      serviceId: serviceId,\r\n      service: nameState.value,\r\n      mileage: mileageState.value,\r\n      date: date,\r\n      info: info,\r\n\r\n    });\r\n   \r\n    props.carNewService(newService);\r\n  };\r\n\r\n  return (\r\n    <div className={classes['new-service']}>\r\n      <div className={classes['service-form']}>\r\n        <form onSubmit={submitHandler}>\r\n          <Input\r\n            id=\"service\"\r\n            label=\"Service\"\r\n            type=\"text\"\r\n            isValid={nameState.isValid}\r\n            value={nameState.value}\r\n            onChange={serviceChangeHandler}\r\n            className={`${classes.control} ${classes['service-name']}`}\r\n          />\r\n          <div className={classes['service-date-box']}>\r\n            <Input\r\n              id=\"date\"\r\n              label=\"Date\"\r\n              type=\"date\"\r\n              isValid={dateState.isValid}\r\n              value={dateState.value}\r\n              onChange={dateChangeHandler}\r\n              className={`${classes.control} ${classes['service-date']}`}\r\n            />\r\n            <Input\r\n              id=\"mileage\"\r\n              label=\"Mileage\"\r\n              type=\"number\"\r\n              isValid={mileageState.isValid}\r\n              value={mileageState.value}\r\n              onChange={mileageChangeHandler}\r\n              className={`${classes.control} ${classes['service-mileage']}`}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <Input\r\n              id=\"info\"\r\n              label=\"Info\"\r\n              type=\"text\"\r\n              ref={infoService}\r\n              className={`${classes.control} ${classes['service-mileage']}`}\r\n            />\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <Button\r\n              type=\"submit\"\r\n              className={classes.btn}\r\n            >\r\n              Add Service\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewService;\r\n"]},"metadata":{},"sourceType":"module"}