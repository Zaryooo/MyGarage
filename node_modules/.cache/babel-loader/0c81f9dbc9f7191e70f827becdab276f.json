{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\GonkiBG\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\GonkiBG\\\\src\\\\components\\\\Cars\\\\Service\\\\NewService.js\";\n\nimport React, { useState } from 'react';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport classes from './NewService.module.css';\n\nvar NewService = function NewService(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      serviceName = _useState2[0],\n      setServiceName = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nameIsValid = _useState4[0],\n      setNameIsValid = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      serviceDate = _useState6[0],\n      setServiceDate = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dateIsValid = _useState8[0],\n      setDateIsValid = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      serviceMileage = _useState10[0],\n      setServiceMileage = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mileageIsValid = _useState12[0],\n      setMileageIsValid = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      serviceInfo = _useState14[0],\n      setServiceInfo = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      formIsValid = _useState16[0],\n      setformIsValid = _useState16[1];\n\n  var serviceChangeHandler = function serviceChangeHandler(event) {\n    setServiceName(event.target.value);\n  };\n\n  var validateServiceHandler = function validateServiceHandler() {\n    if (serviceName !== '') {\n      setNameIsValid(true);\n    } else {\n      setNameIsValid(false);\n    }\n  };\n\n  var dateChangeHandler = function dateChangeHandler() {};\n\n  var validateDateHandler = function validateDateHandler() {};\n\n  var mileageChangeHandler = function mileageChangeHandler() {};\n\n  var validateMileageHandler = function validateMileageHandler() {};\n\n  var infoChangeHandler = function infoChangeHandler() {};\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes['new-service'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes['service-form'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"service\",\n    label: \"Service\",\n    type: \"text\",\n    isValid: nameIsValid,\n    value: serviceName,\n    onChange: serviceChangeHandler,\n    onBlur: validateServiceHandler,\n    className: \"\".concat(classes.control, \" \").concat(classes['service-name']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes['service-date-box'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"date\",\n    label: \"Date\",\n    type: \"date\",\n    isValid: dateIsValid,\n    value: serviceDate,\n    onChange: dateChangeHandler,\n    onBlur: validateDateHandler,\n    className: \"\".concat(classes.control, \" \").concat(classes['service-date']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"mileage\",\n    label: \"Mileage\",\n    type: \"number\",\n    isValid: mileageIsValid,\n    value: serviceMileage,\n    onChange: mileageChangeHandler,\n    onBlur: validateMileageHandler,\n    className: \"\".concat(classes.control, \" \").concat(classes['service-mileage']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    id: \"info\",\n    label: \"Info\",\n    type: \"text\",\n    value: serviceInfo,\n    onChange: infoChangeHandler,\n    className: \"\".concat(classes.control, \" \").concat(classes['service-info']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.btn,\n    disabled: !formIsValid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Add Service\"))));\n};\n\nexport default NewService;","map":{"version":3,"sources":["C:/Users/zaryo/OneDrive/Desktop/GonkiBG/src/components/Cars/Service/NewService.js"],"names":["React","useState","Input","Button","classes","NewService","props","serviceName","setServiceName","nameIsValid","setNameIsValid","serviceDate","setServiceDate","dateIsValid","setDateIsValid","serviceMileage","setServiceMileage","mileageIsValid","setMileageIsValid","serviceInfo","setServiceInfo","formIsValid","setformIsValid","serviceChangeHandler","event","target","value","validateServiceHandler","dateChangeHandler","validateDateHandler","mileageChangeHandler","validateMileageHandler","infoChangeHandler","submitHandler","preventDefault","control","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport classes from './NewService.module.css';\r\n\r\nconst NewService = (props) => {\r\n  const [serviceName, setServiceName] = useState();\r\n  const [nameIsValid, setNameIsValid] = useState();\r\n  const [serviceDate, setServiceDate] = useState();\r\n  const [dateIsValid, setDateIsValid] = useState();\r\n  const [serviceMileage, setServiceMileage] = useState();\r\n  const [mileageIsValid, setMileageIsValid] = useState();\r\n  const [serviceInfo, setServiceInfo] = useState();\r\n  const [formIsValid, setformIsValid] = useState();\r\n  \r\n\r\n  const serviceChangeHandler = (event) => {\r\n      setServiceName(event.target.value);\r\n  };\r\n\r\n  const validateServiceHandler = () => {\r\n      if(serviceName !== '') {\r\n        setNameIsValid(true);\r\n      } else {\r\n          setNameIsValid(false);\r\n      }\r\n  };\r\n\r\n  const dateChangeHandler = () => {};\r\n\r\n  const validateDateHandler = () => {};\r\n\r\n  const mileageChangeHandler = () => {};\r\n\r\n  const validateMileageHandler = () => {};\r\n\r\n  const infoChangeHandler = () => {};\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n};\r\n\r\n  return (\r\n    <div className={classes['new-service']}>\r\n      <div className={classes['service-form']}>\r\n        <form onSubmit={submitHandler}>\r\n          <Input\r\n            id=\"service\"\r\n            label=\"Service\"\r\n            type=\"text\"\r\n            isValid={nameIsValid}\r\n            value={serviceName}\r\n            onChange={serviceChangeHandler}\r\n            onBlur={validateServiceHandler}\r\n            className={`${classes.control} ${classes['service-name']}`}\r\n          />\r\n          <div className={classes['service-date-box']}>\r\n            <Input\r\n              id=\"date\"\r\n              label=\"Date\"\r\n              type=\"date\"\r\n              isValid={dateIsValid}\r\n              value={serviceDate}\r\n              onChange={dateChangeHandler}\r\n              onBlur={validateDateHandler}\r\n              className={`${classes.control} ${classes['service-date']}`}\r\n            />\r\n            <Input\r\n              id=\"mileage\"\r\n              label=\"Mileage\"\r\n              type=\"number\"\r\n              isValid={mileageIsValid}\r\n              value={serviceMileage}\r\n              onChange={mileageChangeHandler}\r\n              onBlur={validateMileageHandler}\r\n              className={`${classes.control} ${classes['service-mileage']}`}\r\n            />\r\n          </div>\r\n          <Input\r\n            id=\"info\"\r\n            label=\"Info\"\r\n            type=\"text\"\r\n            value={serviceInfo}\r\n            onChange={infoChangeHandler}\r\n            className={`${classes.control} ${classes['service-info']}`}\r\n          />\r\n        </form>\r\n        <div className={classes.actions}>\r\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\r\n            Add Service\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewService;\r\n"]},"metadata":{},"sourceType":"module"}