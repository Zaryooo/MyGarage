{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\MyGarage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\MyGarage\\\\src\\\\components\\\\Login\\\\Login.js\";\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\n\nvar emailReducer = function emailReducer(state, action) {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nvar passwordReducer = function passwordReducer(state, action) {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nvar Login = function Login(props) {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      formIsValid = _useState2[0],\n      setFormIsValid = _useState2[1];\n\n  var _useReducer = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      emailState = _useReducer2[0],\n      dispatchEmail = _useReducer2[1];\n\n  var _useReducer3 = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  }),\n      _useReducer4 = _slicedToArray(_useReducer3, 2),\n      passwordState = _useReducer4[0],\n      dispatchPassword = _useReducer4[1];\n\n  var authCtx = useContext(AuthContext); // useEffect(() => {\n  //   console.log('EFFECT RUNNING');\n  //   return () => {\n  //     console.log('EFFECT CLEANUP');\n  //   };\n  // }, []);\n\n  var emailIsValid = emailState.isValid;\n  var passwordIsValid = passwordState.isValid;\n  useEffect(function () {\n    var identifier = setTimeout(function () {\n      //console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return function () {\n      //console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  var emailChangeHandler = function emailChangeHandler(event) {\n    //setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  var passwordChangeHandler = function passwordChangeHandler(event) {\n    //setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  var validateEmailHandler = function validateEmailHandler() {\n    //setEmailIsValid(enteredEmail.includes('@'));\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  var validatePasswordHandler = function validatePasswordHandler() {\n    //setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    label: \"E-Mail\",\n    type: \"email\",\n    isValid: emailIsValid,\n    value: emailState.value,\n    onChange: emailChangeHandler,\n    onBlur: validateEmailHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    isValid: passwordIsValid,\n    value: passwordState.value,\n    onChange: passwordChangeHandler,\n    onBlur: validatePasswordHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.btn,\n    disabled: !formIsValid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/zaryo/OneDrive/Desktop/MyGarage/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') };\n  }\n  return { value: '', isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: '', isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null,\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  // useEffect(() => {\n  //   console.log('EFFECT RUNNING');\n\n  //   return () => {\n  //     console.log('EFFECT CLEANUP');\n  //   };\n  // }, []);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      //console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      //console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    //setEnteredEmail(event.target.value);\n    dispatchEmail({ type: 'USER_INPUT', val: event.target.value });\n\n    // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    //setEnteredPassword(event.target.value);\n    dispatchPassword({ type: 'USER_INPUT', val: event.target.value });\n\n    // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    //setEmailIsValid(enteredEmail.includes('@'));\n    dispatchEmail({ type: 'INPUT_BLUR' });\n  };\n\n  const validatePasswordHandler = () => {\n    //setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({ type: 'INPUT_BLUR' });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          id=\"email\"\n          label=\"E-Mail\"\n          type=\"email\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        ></Input>\n        <Input\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        ></Input>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}