{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zaryo\\\\OneDrive\\\\Desktop\\\\GonkiBG\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n  useEffect(() => {\n    const storedUserLogInfo = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLogInfo === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const btnLoginHadler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      isLogin: isLogin,\n      onLogout: logoutHandler,\n      onLogin: loginHandler,\n      loginBtn: btnLoginHadler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"TFSAecBTzk6MYYYYwPu5mTV+0T8=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/zaryo/OneDrive/Desktop/GonkiBG/src/store/auth-context.js"],"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","isLogin","setIsLogin","storedUserLogInfo","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","btnLoginHadler","loginBtn","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFoB;AAGtCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHM,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA1B;;AAEA,QAAIF,iBAAiB,KAAK,GAA1B,EAA+B;AAC7BH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMM,aAAa,GAAG,MAAM;AAC1BF,IAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AACAP,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,QAAMQ,YAAY,GAAG,MAAM;AACzBJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,QAAMU,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLjB,MAAAA,UAAU,EAAEA,UADP;AAELQ,MAAAA,OAAO,EAAEA,OAFJ;AAGLP,MAAAA,QAAQ,EAAEY,aAHL;AAILX,MAAAA,OAAO,EAAEa,YAJJ;AAKLG,MAAAA,QAAQ,EAAED;AALL,KADT;AAAA,cASGX,KAAK,CAACa;AATT;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvCM;;GAAMd,mB;;KAAAA,mB;AAyCb,eAAeP,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n  isLoggedIn: false,\r\n  onLogout: () => {},\r\n  onLogin: (email, password) => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedUserLogInfo = localStorage.getItem('isLoggedIn');\r\n\r\n    if (storedUserLogInfo === '1') {\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem('isLoggedIn');\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    localStorage.setItem('isLoggedIn', '1');\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const btnLoginHadler = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n        isLogin: isLogin,\r\n        onLogout: logoutHandler,\r\n        onLogin: loginHandler,\r\n        loginBtn: btnLoginHadler\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}